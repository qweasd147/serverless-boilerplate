# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: lambda-edge
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "1"

plugins:
  - serverless-lambda-edge-pre-existing-cloudfront

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${self:custom.stage}
  region: us-east-1
  role: imageResizeRole

custom:
  stage: ${opt:stage, "development"}
  config: ${file(./config.js):config}

functions:
  imageResizeOriginResponse:
    name: "${self:custom.stage}ImageResizeOriginResponse"
    memorySize: 512
    timeout: 3
    handler: handler.hello
    events:
      - preExistingCloudFront:
          # ---- Mandatory Properties -----
          distributionId: ${self:custom.config.${self:custom.stage}.DISTRIBUTION_ID} # CloudFront distribution ID you want to associate
          eventType: origin-response # Choose event to trigger your Lambda function, which are `viewer-request`, `origin-request`, `origin-response` or `viewer-response`
          pathPattern: ${self:custom.config.${self:custom.stage}.BUCKET_PATH} # Specifying the CloudFront behavior
          includeBody: false

resources:
  Resources:
    imageResizeRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.stage}imageResizeRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - edgelambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:custom.stage}imageResizePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - iam:CreateServiceLinkedRole
                    - lambda:GetFunction
                    - lambda:EnableReplication
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "arn:aws:s3:::${self:custom.config.${self:custom.stage}.BUCKET_NAME}${self:custom.config.${self:custom.stage}.BUCKET_PATH}"
                    - "arn:aws:logs:*:*:*"
                    - "arn:aws:iam::*:role/*"
                    - "arn:aws:lambda:::function:${self:custom.stage}ImageResizeOriginResponse"
